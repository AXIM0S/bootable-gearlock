diff -Nur newinstaller.orig/Android.mk newinstaller/Android.mk
--- newinstaller.orig/Android.mk	2020-08-08 11:08:17.716553516 +0600
+++ newinstaller/Android.mk	2020-08-08 11:09:31.049054959 +0600
@@ -78,7 +78,7 @@
 	mkdosfs -n EFI $$img; mmd -i $$img ::boot; \
 	mcopy -si $$img $@/efi ::; mdel -i $$img ::efi/boot/*.cfg
 
-BUILT_IMG := $(addprefix $(PRODUCT_OUT)/,ramdisk.img initrd.img install.img) $(systemimg)
+BUILT_IMG := $(addprefix $(PRODUCT_OUT)/,ramdisk.img initrd.img install.img gearlock) $(systemimg)
 BUILT_IMG += $(if $(TARGET_PREBUILT_KERNEL),$(TARGET_PREBUILT_KERNEL),$(PRODUCT_OUT)/kernel)
 
 GENISOIMG := $(if $(shell which xorriso 2> /dev/null),xorriso -as mkisofs,genisoimage)
diff -Nur newinstaller.orig/initrd/init newinstaller/initrd/init
--- newinstaller.orig/initrd/init	2020-08-08 11:08:17.722553896 +0600
+++ newinstaller/initrd/init	2020-08-08 11:10:58.204082958 +0600
@@ -214,7 +214,7 @@
 [ -n "$INSTALL" ] && do_install
 
 load_modules
-mount_data
+mount_data; hook_gearinit
 mount_sdcard
 setup_tslib
 setup_dpi
diff -Nur newinstaller.orig/install/grub2/efi/boot/android.cfg newinstaller/install/grub2/efi/boot/android.cfg
--- newinstaller.orig/install/grub2/efi/boot/android.cfg	2020-08-08 11:08:17.736554782 +0600
+++ newinstaller/install/grub2/efi/boot/android.cfg	2020-08-08 11:10:17.567778810 +0600
@@ -83,7 +83,9 @@
 export android bootefi grub kdir live src
 
 # Create main menu
-add_entry "$live" quiet
+add_entry "$live" quiet NORECOVERY=0
+# You can use ALWAYSRECOVER=0 flag to skip the countdown also.
+add_entry "$live (GearLock Recovery Mode)" quiet
 add_entry "$live - Debug" DEBUG=2
 add_entry "$live - Debug gralloc.gbm" DEBUG=2 GRALLOC=gbm
 add_entry "$live - Debug drmfb-composer" DEBUG=2 HWC=drmfb GRALLOC=gbm
diff -Nur newinstaller.orig/install/scripts/1-install newinstaller/install/scripts/1-install
--- newinstaller.orig/install/scripts/1-install	2020-08-08 11:08:17.756556047 +0600
+++ newinstaller/install/scripts/1-install	2020-08-08 11:09:44.541854944 +0600
@@ -526,6 +526,7 @@
 
 	mkdir -p hd/$asrc
 	cd hd/$asrc
+	test -e "/mnt/$SRC/gearlock" && cp "/mnt/$SRC/gearlock" . # Copy gearlock boot image
 	rm -rf system*
 	( ( cd /; find $files | $CPIO -H newc -o ) | pv -ns ${size}k | ( $CPIO -iud > /dev/null; echo $? > /tmp/result )) 2>&1 \
 		| progress_bar "Installing $OS_TITLE to $1" "Expect to write $size KB..."
